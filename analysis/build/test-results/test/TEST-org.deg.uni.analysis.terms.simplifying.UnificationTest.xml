<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="org.deg.uni.analysis.terms.simplifying.UnificationTest" tests="6" skipped="0" failures="1" errors="0" timestamp="2022-05-02T14:36:02" hostname="Hans" time="0.354">
  <properties/>
  <testcase name="testUnification0()" classname="org.deg.uni.analysis.terms.simplifying.UnificationTest" time="0.207"/>
  <testcase name="testUnification1()" classname="org.deg.uni.analysis.terms.simplifying.UnificationTest" time="0.012"/>
  <testcase name="testUnification2()" classname="org.deg.uni.analysis.terms.simplifying.UnificationTest" time="0.006"/>
  <testcase name="testUnification3()" classname="org.deg.uni.analysis.terms.simplifying.UnificationTest" time="0.004"/>
  <testcase name="testUnification4()" classname="org.deg.uni.analysis.terms.simplifying.UnificationTest" time="0.011"/>
  <testcase name="testUnification5()" classname="org.deg.uni.analysis.terms.simplifying.UnificationTest" time="0.109">
    <failure message="org.opentest4j.AssertionFailedError: expected: &lt;[{f1=a * b}, {f2=b * a}]&gt; but was: &lt;[{f1=b * c * d, f2=b * c * d, a=a}, {f1=b * c * d, f2=b * d * c, a=a}, {f1=b * c * d, f2=c * b * d, a=a}, {f1=b * c * d, f2=c * d * b, a=a}, {f1=b * c * d, f2=d * b * c, a=a}, {f1=b * c * d, f2=d * c * b, a=a}, {f1=b * d * c, f2=b * c * d, a=a}, {f1=b * d * c, f2=b * d * c, a=a}, {f1=b * d * c, f2=c * b * d, a=a}, {f1=b * d * c, f2=c * d * b, a=a}, {f1=b * d * c, f2=d * b * c, a=a}, {f1=c * b * d, f2=b * c * d, a=a}, {f1=c * b * d, f2=b * d * c, a=a}, {f1=c * b * d, f2=c * b * d, a=a}, {f1=c * b * d, f2=c * d * b, a=a}, {f1=c * d * b, f2=b * c * d, a=a}, {f1=c * d * b, f2=b * d * c, a=a}, {f1=c * d * b, f2=c * b * d, a=a}, {f1=d * b * c, f2=b * c * d, a=a}, {f1=d * b * c, f2=b * d * c, a=a}, {f1=d * c * b, f2=b * c * d, a=a}, {f1=a * c * d, f2=a * c * d, a=b}, {f1=a * c * d, f2=a * d * c, a=b}, {f1=a * c * d, f2=c * a * d, a=b}, {f1=a * c * d, f2=c * d * a, a=b}, {f1=a * c * d, f2=d * a * c, a=b}, {f1=a * c * d, f2=d * c * a, a=b}, {f1=a * d * c, f2=a * c * d, a=b}, {f1=a * d * c, f2=a * d * c, a=b}, {f1=a * d * c, f2=c * a * d, a=b}, {f1=a * d * c, f2=c * d * a, a=b}, {f1=a * d * c, f2=d * a * c, a=b}, {f1=c * a * d, f2=a * c * d, a=b}, {f1=c * a * d, f2=a * d * c, a=b}, {f1=c * a * d, f2=c * a * d, a=b}, {f1=c * a * d, f2=c * d * a, a=b}, {f1=c * d * a, f2=a * c * d, a=b}, {f1=c * d * a, f2=a * d * c, a=b}, {f1=c * d * a, f2=c * a * d, a=b}, {f1=d * a * c, f2=a * c * d, a=b}, {f1=d * a * c, f2=a * d * c, a=b}, {f1=d * c * a, f2=a * c * d, a=b}, {f1=a * b * d, f2=a * b * d, a=c}, {f1=a * b * d, f2=a * d * b, a=c}, {f1=a * b * d, f2=b * a * d, a=c}, {f1=a * b * d, f2=b * d * a, a=c}, {f1=a * b * d, f2=d * a * b, a=c}, {f1=a * b * d, f2=d * b * a, a=c}, {f1=a * d * b, f2=a * b * d, a=c}, {f1=a * d * b, f2=a * d * b, a=c}, {f1=a * d * b, f2=b * a * d, a=c}, {f1=a * d * b, f2=b * d * a, a=c}, {f1=a * d * b, f2=d * a * b, a=c}, {f1=b * a * d, f2=a * b * d, a=c}, {f1=b * a * d, f2=a * d * b, a=c}, {f1=b * a * d, f2=b * a * d, a=c}, {f1=b * a * d, f2=b * d * a, a=c}, {f1=b * d * a, f2=a * b * d, a=c}, {f1=b * d * a, f2=a * d * b, a=c}, {f1=b * d * a, f2=b * a * d, a=c}, {f1=d * a * b, f2=a * b * d, a=c}, {f1=d * a * b, f2=a * d * b, a=c}, {f1=d * b * a, f2=a * b * d, a=c}, {f1=a * b * c, f2=a * b * c, a=d}, {f1=a * b * c, f2=a * c * b, a=d}, {f1=a * b * c, f2=b * a * c, a=d}, {f1=a * b * c, f2=b * c * a, a=d}, {f1=a * b * c, f2=c * a * b, a=d}, {f1=a * b * c, f2=c * b * a, a=d}, {f1=a * c * b, f2=a * b * c, a=d}, {f1=a * c * b, f2=a * c * b, a=d}, {f1=a * c * b, f2=b * a * c, a=d}, {f1=a * c * b, f2=b * c * a, a=d}, {f1=a * c * b, f2=c * a * b, a=d}, {f1=b * a * c, f2=a * b * c, a=d}, {f1=b * a * c, f2=a * c * b, a=d}, {f1=b * a * c, f2=b * a * c, a=d}, {f1=b * a * c, f2=b * c * a, a=d}, {f1=b * c * a, f2=a * b * c, a=d}, {f1=b * c * a, f2=a * c * b, a=d}, {f1=b * c * a, f2=b * a * c, a=d}, {f1=c * a * b, f2=a * b * c, a=d}, {f1=c * a * b, f2=a * c * b, a=d}, {f1=c * b * a, f2=a * b * c, a=d}, {f1=b * c * d, f2=b * c * d, a=a}, {f1=b * c * d, f2=b * d * c, a=a}, {f1=b * c * d, f2=c * b * d, a=a}, {f1=b * c * d, f2=c * d * b, a=a}, {f1=b * c * d, f2=d * b * c, a=a}, {f1=b * c * d, f2=d * c * b, a=a}, {f1=b * d * c, f2=b * c * d, a=a}, {f1=b * d * c, f2=b * d * c, a=a}, {f1=b * d * c, f2=c * b * d, a=a}, {f1=b * d * c, f2=c * d * b, a=a}, {f1=b * d * c, f2=d * b * c, a=a}, {f1=c * b * d, f2=b * c * d, a=a}, {f1=c * b * d, f2=b * d * c, a=a}, {f1=c * b * d, f2=c * b * d, a=a}, {f1=c * b * d, f2=c * d * b, a=a}, {f1=c * d * b, f2=b * c * d, a=a}, {f1=c * d * b, f2=b * d * c, a=a}, {f1=c * d * b, f2=c * b * d, a=a}, {f1=d * b * c, f2=b * c * d, a=a}, {f1=d * b * c, f2=b * d * c, a=a}, {f1=d * c * b, f2=b * c * d, a=a}, {f1=a * c * d, f2=a * c * d, a=b}, {f1=a * c * d, f2=a * d * c, a=b}, {f1=a * c * d, f2=c * a * d, a=b}, {f1=a * c * d, f2=c * d * a, a=b}, {f1=a * c * d, f2=d * a * c, a=b}, {f1=a * c * d, f2=d * c * a, a=b}, {f1=a * d * c, f2=a * c * d, a=b}, {f1=a * d * c, f2=a * d * c, a=b}, {f1=a * d * c, f2=c * a * d, a=b}, {f1=a * d * c, f2=c * d * a, a=b}, {f1=a * d * c, f2=d * a * c, a=b}, {f1=c * a * d, f2=a * c * d, a=b}, {f1=c * a * d, f2=a * d * c, a=b}, {f1=c * a * d, f2=c * a * d, a=b}, {f1=c * a * d, f2=c * d * a, a=b}, {f1=c * d * a, f2=a * c * d, a=b}, {f1=c * d * a, f2=a * d * c, a=b}, {f1=c * d * a, f2=c * a * d, a=b}, {f1=d * a * c, f2=a * c * d, a=b}, {f1=d * a * c, f2=a * d * c, a=b}, {f1=d * c * a, f2=a * c * d, a=b}, {f1=a * b * d, f2=a * b * d, a=c}, {f1=a * b * d, f2=a * d * b, a=c}, {f1=a * b * d, f2=b * a * d, a=c}, {f1=a * b * d, f2=b * d * a, a=c}, {f1=a * b * d, f2=d * a * b, a=c}, {f1=a * b * d, f2=d * b * a, a=c}, {f1=a * d * b, f2=a * b * d, a=c}, {f1=a * d * b, f2=a * d * b, a=c}, {f1=a * d * b, f2=b * a * d, a=c}, {f1=a * d * b, f2=b * d * a, a=c}, {f1=a * d * b, f2=d * a * b, a=c}, {f1=b * a * d, f2=a * b * d, a=c}, {f1=b * a * d, f2=a * d * b, a=c}, {f1=b * a * d, f2=b * a * d, a=c}, {f1=b * a * d, f2=b * d * a, a=c}, {f1=b * d * a, f2=a * b * d, a=c}, {f1=b * d * a, f2=a * d * b, a=c}, {f1=b * d * a, f2=b * a * d, a=c}, {f1=d * a * b, f2=a * b * d, a=c}, {f1=d * a * b, f2=a * d * b, a=c}, {f1=d * b * a, f2=a * b * d, a=c}, {f1=a * b * c, f2=a * b * c, a=d}, {f1=a * b * c, f2=a * c * b, a=d}, {f1=a * b * c, f2=b * a * c, a=d}, {f1=a * b * c, f2=b * c * a, a=d}, {f1=a * b * c, f2=c * a * b, a=d}, {f1=a * b * c, f2=c * b * a, a=d}, {f1=a * c * b, f2=a * b * c, a=d}, {f1=a * c * b, f2=a * c * b, a=d}, {f1=a * c * b, f2=b * a * c, a=d}, {f1=a * c * b, f2=b * c * a, a=d}, {f1=a * c * b, f2=c * a * b, a=d}, {f1=b * a * c, f2=a * b * c, a=d}, {f1=b * a * c, f2=a * c * b, a=d}, {f1=b * a * c, f2=b * a * c, a=d}, {f1=b * a * c, f2=b * c * a, a=d}, {f1=b * c * a, f2=a * b * c, a=d}, {f1=b * c * a, f2=a * c * b, a=d}, {f1=b * c * a, f2=b * a * c, a=d}, {f1=c * a * b, f2=a * b * c, a=d}, {f1=c * a * b, f2=a * c * b, a=d}, {f1=c * b * a, f2=a * b * c, a=d}]&gt;" type="org.opentest4j.AssertionFailedError">org.opentest4j.AssertionFailedError: expected: &lt;[{f1=a * b}, {f2=b * a}]&gt; but was: &lt;[{f1=b * c * d, f2=b * c * d, a=a}, {f1=b * c * d, f2=b * d * c, a=a}, {f1=b * c * d, f2=c * b * d, a=a}, {f1=b * c * d, f2=c * d * b, a=a}, {f1=b * c * d, f2=d * b * c, a=a}, {f1=b * c * d, f2=d * c * b, a=a}, {f1=b * d * c, f2=b * c * d, a=a}, {f1=b * d * c, f2=b * d * c, a=a}, {f1=b * d * c, f2=c * b * d, a=a}, {f1=b * d * c, f2=c * d * b, a=a}, {f1=b * d * c, f2=d * b * c, a=a}, {f1=c * b * d, f2=b * c * d, a=a}, {f1=c * b * d, f2=b * d * c, a=a}, {f1=c * b * d, f2=c * b * d, a=a}, {f1=c * b * d, f2=c * d * b, a=a}, {f1=c * d * b, f2=b * c * d, a=a}, {f1=c * d * b, f2=b * d * c, a=a}, {f1=c * d * b, f2=c * b * d, a=a}, {f1=d * b * c, f2=b * c * d, a=a}, {f1=d * b * c, f2=b * d * c, a=a}, {f1=d * c * b, f2=b * c * d, a=a}, {f1=a * c * d, f2=a * c * d, a=b}, {f1=a * c * d, f2=a * d * c, a=b}, {f1=a * c * d, f2=c * a * d, a=b}, {f1=a * c * d, f2=c * d * a, a=b}, {f1=a * c * d, f2=d * a * c, a=b}, {f1=a * c * d, f2=d * c * a, a=b}, {f1=a * d * c, f2=a * c * d, a=b}, {f1=a * d * c, f2=a * d * c, a=b}, {f1=a * d * c, f2=c * a * d, a=b}, {f1=a * d * c, f2=c * d * a, a=b}, {f1=a * d * c, f2=d * a * c, a=b}, {f1=c * a * d, f2=a * c * d, a=b}, {f1=c * a * d, f2=a * d * c, a=b}, {f1=c * a * d, f2=c * a * d, a=b}, {f1=c * a * d, f2=c * d * a, a=b}, {f1=c * d * a, f2=a * c * d, a=b}, {f1=c * d * a, f2=a * d * c, a=b}, {f1=c * d * a, f2=c * a * d, a=b}, {f1=d * a * c, f2=a * c * d, a=b}, {f1=d * a * c, f2=a * d * c, a=b}, {f1=d * c * a, f2=a * c * d, a=b}, {f1=a * b * d, f2=a * b * d, a=c}, {f1=a * b * d, f2=a * d * b, a=c}, {f1=a * b * d, f2=b * a * d, a=c}, {f1=a * b * d, f2=b * d * a, a=c}, {f1=a * b * d, f2=d * a * b, a=c}, {f1=a * b * d, f2=d * b * a, a=c}, {f1=a * d * b, f2=a * b * d, a=c}, {f1=a * d * b, f2=a * d * b, a=c}, {f1=a * d * b, f2=b * a * d, a=c}, {f1=a * d * b, f2=b * d * a, a=c}, {f1=a * d * b, f2=d * a * b, a=c}, {f1=b * a * d, f2=a * b * d, a=c}, {f1=b * a * d, f2=a * d * b, a=c}, {f1=b * a * d, f2=b * a * d, a=c}, {f1=b * a * d, f2=b * d * a, a=c}, {f1=b * d * a, f2=a * b * d, a=c}, {f1=b * d * a, f2=a * d * b, a=c}, {f1=b * d * a, f2=b * a * d, a=c}, {f1=d * a * b, f2=a * b * d, a=c}, {f1=d * a * b, f2=a * d * b, a=c}, {f1=d * b * a, f2=a * b * d, a=c}, {f1=a * b * c, f2=a * b * c, a=d}, {f1=a * b * c, f2=a * c * b, a=d}, {f1=a * b * c, f2=b * a * c, a=d}, {f1=a * b * c, f2=b * c * a, a=d}, {f1=a * b * c, f2=c * a * b, a=d}, {f1=a * b * c, f2=c * b * a, a=d}, {f1=a * c * b, f2=a * b * c, a=d}, {f1=a * c * b, f2=a * c * b, a=d}, {f1=a * c * b, f2=b * a * c, a=d}, {f1=a * c * b, f2=b * c * a, a=d}, {f1=a * c * b, f2=c * a * b, a=d}, {f1=b * a * c, f2=a * b * c, a=d}, {f1=b * a * c, f2=a * c * b, a=d}, {f1=b * a * c, f2=b * a * c, a=d}, {f1=b * a * c, f2=b * c * a, a=d}, {f1=b * c * a, f2=a * b * c, a=d}, {f1=b * c * a, f2=a * c * b, a=d}, {f1=b * c * a, f2=b * a * c, a=d}, {f1=c * a * b, f2=a * b * c, a=d}, {f1=c * a * b, f2=a * c * b, a=d}, {f1=c * b * a, f2=a * b * c, a=d}, {f1=b * c * d, f2=b * c * d, a=a}, {f1=b * c * d, f2=b * d * c, a=a}, {f1=b * c * d, f2=c * b * d, a=a}, {f1=b * c * d, f2=c * d * b, a=a}, {f1=b * c * d, f2=d * b * c, a=a}, {f1=b * c * d, f2=d * c * b, a=a}, {f1=b * d * c, f2=b * c * d, a=a}, {f1=b * d * c, f2=b * d * c, a=a}, {f1=b * d * c, f2=c * b * d, a=a}, {f1=b * d * c, f2=c * d * b, a=a}, {f1=b * d * c, f2=d * b * c, a=a}, {f1=c * b * d, f2=b * c * d, a=a}, {f1=c * b * d, f2=b * d * c, a=a}, {f1=c * b * d, f2=c * b * d, a=a}, {f1=c * b * d, f2=c * d * b, a=a}, {f1=c * d * b, f2=b * c * d, a=a}, {f1=c * d * b, f2=b * d * c, a=a}, {f1=c * d * b, f2=c * b * d, a=a}, {f1=d * b * c, f2=b * c * d, a=a}, {f1=d * b * c, f2=b * d * c, a=a}, {f1=d * c * b, f2=b * c * d, a=a}, {f1=a * c * d, f2=a * c * d, a=b}, {f1=a * c * d, f2=a * d * c, a=b}, {f1=a * c * d, f2=c * a * d, a=b}, {f1=a * c * d, f2=c * d * a, a=b}, {f1=a * c * d, f2=d * a * c, a=b}, {f1=a * c * d, f2=d * c * a, a=b}, {f1=a * d * c, f2=a * c * d, a=b}, {f1=a * d * c, f2=a * d * c, a=b}, {f1=a * d * c, f2=c * a * d, a=b}, {f1=a * d * c, f2=c * d * a, a=b}, {f1=a * d * c, f2=d * a * c, a=b}, {f1=c * a * d, f2=a * c * d, a=b}, {f1=c * a * d, f2=a * d * c, a=b}, {f1=c * a * d, f2=c * a * d, a=b}, {f1=c * a * d, f2=c * d * a, a=b}, {f1=c * d * a, f2=a * c * d, a=b}, {f1=c * d * a, f2=a * d * c, a=b}, {f1=c * d * a, f2=c * a * d, a=b}, {f1=d * a * c, f2=a * c * d, a=b}, {f1=d * a * c, f2=a * d * c, a=b}, {f1=d * c * a, f2=a * c * d, a=b}, {f1=a * b * d, f2=a * b * d, a=c}, {f1=a * b * d, f2=a * d * b, a=c}, {f1=a * b * d, f2=b * a * d, a=c}, {f1=a * b * d, f2=b * d * a, a=c}, {f1=a * b * d, f2=d * a * b, a=c}, {f1=a * b * d, f2=d * b * a, a=c}, {f1=a * d * b, f2=a * b * d, a=c}, {f1=a * d * b, f2=a * d * b, a=c}, {f1=a * d * b, f2=b * a * d, a=c}, {f1=a * d * b, f2=b * d * a, a=c}, {f1=a * d * b, f2=d * a * b, a=c}, {f1=b * a * d, f2=a * b * d, a=c}, {f1=b * a * d, f2=a * d * b, a=c}, {f1=b * a * d, f2=b * a * d, a=c}, {f1=b * a * d, f2=b * d * a, a=c}, {f1=b * d * a, f2=a * b * d, a=c}, {f1=b * d * a, f2=a * d * b, a=c}, {f1=b * d * a, f2=b * a * d, a=c}, {f1=d * a * b, f2=a * b * d, a=c}, {f1=d * a * b, f2=a * d * b, a=c}, {f1=d * b * a, f2=a * b * d, a=c}, {f1=a * b * c, f2=a * b * c, a=d}, {f1=a * b * c, f2=a * c * b, a=d}, {f1=a * b * c, f2=b * a * c, a=d}, {f1=a * b * c, f2=b * c * a, a=d}, {f1=a * b * c, f2=c * a * b, a=d}, {f1=a * b * c, f2=c * b * a, a=d}, {f1=a * c * b, f2=a * b * c, a=d}, {f1=a * c * b, f2=a * c * b, a=d}, {f1=a * c * b, f2=b * a * c, a=d}, {f1=a * c * b, f2=b * c * a, a=d}, {f1=a * c * b, f2=c * a * b, a=d}, {f1=b * a * c, f2=a * b * c, a=d}, {f1=b * a * c, f2=a * c * b, a=d}, {f1=b * a * c, f2=b * a * c, a=d}, {f1=b * a * c, f2=b * c * a, a=d}, {f1=b * c * a, f2=a * b * c, a=d}, {f1=b * c * a, f2=a * c * b, a=d}, {f1=b * c * a, f2=b * a * c, a=d}, {f1=c * a * b, f2=a * b * c, a=d}, {f1=c * a * b, f2=a * c * b, a=d}, {f1=c * b * a, f2=a * b * c, a=d}]&gt;
	at app//org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)
	at app//org.junit.jupiter.api.AssertionUtils.failNotEqual(AssertionUtils.java:62)
	at app//org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:182)
	at app//org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:177)
	at app//org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:1141)
	at app//org.deg.uni.analysis.terms.simplifying.UnificationTest.testUnification5(UnificationTest.kt:87)
	at java.base@17.0.2/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@17.0.2/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base@17.0.2/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@17.0.2/java.lang.reflect.Method.invoke(Method.java:568)
	at app//org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)
	at app//org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base@17.0.2/java.util.ArrayList.forEach(ArrayList.java:1511)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base@17.0.2/java.util.ArrayList.forEach(ArrayList.java:1511)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at app//org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at app//org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at java.base@17.0.2/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@17.0.2/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base@17.0.2/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@17.0.2/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:133)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
</failure>
  </testcase>
  <system-out><![CDATA[Unification of terms
2^(a + 3) and 
x^y is 
[{y=a + 3, x=2}]
Unification of terms
a + b + c and 
x + y + z is 
[{z=c, y=b, x=a}, {z=b, y=c, x=a}, {z=c, y=a, x=b}, {z=a, y=c, x=b}, {z=b, y=a, x=c}, {z=a, y=b, x=c}]
Unification of terms
2 * a + 2 * b and 
x * y + x * z is 
[{z=b, y=a, x=2}, {z=a, y=b, x=2}]
Unification of terms
2 * a + 2 * b and 
y * x + z * x is 
[{z=b, y=a, x=2}, {z=a, y=b, x=2}]
Unification of terms
1 * a * b and 
f * 1 is 
[{f=a * b}, {f=b * a}]
168
Unification1 of terms
a * b * c * d + a * b * c * d and 
a * f1 + a * f2 is 
[{f1=b * c * d, f2=b * c * d, a=a}, {f1=b * c * d, f2=b * d * c, a=a}, {f1=b * c * d, f2=c * b * d, a=a}, {f1=b * c * d, f2=c * d * b, a=a}, {f1=b * c * d, f2=d * b * c, a=a}, {f1=b * c * d, f2=d * c * b, a=a}, {f1=b * d * c, f2=b * c * d, a=a}, {f1=b * d * c, f2=b * d * c, a=a}, {f1=b * d * c, f2=c * b * d, a=a}, {f1=b * d * c, f2=c * d * b, a=a}, {f1=b * d * c, f2=d * b * c, a=a}, {f1=c * b * d, f2=b * c * d, a=a}, {f1=c * b * d, f2=b * d * c, a=a}, {f1=c * b * d, f2=c * b * d, a=a}, {f1=c * b * d, f2=c * d * b, a=a}, {f1=c * d * b, f2=b * c * d, a=a}, {f1=c * d * b, f2=b * d * c, a=a}, {f1=c * d * b, f2=c * b * d, a=a}, {f1=d * b * c, f2=b * c * d, a=a}, {f1=d * b * c, f2=b * d * c, a=a}, {f1=d * c * b, f2=b * c * d, a=a}, {f1=a * c * d, f2=a * c * d, a=b}, {f1=a * c * d, f2=a * d * c, a=b}, {f1=a * c * d, f2=c * a * d, a=b}, {f1=a * c * d, f2=c * d * a, a=b}, {f1=a * c * d, f2=d * a * c, a=b}, {f1=a * c * d, f2=d * c * a, a=b}, {f1=a * d * c, f2=a * c * d, a=b}, {f1=a * d * c, f2=a * d * c, a=b}, {f1=a * d * c, f2=c * a * d, a=b}, {f1=a * d * c, f2=c * d * a, a=b}, {f1=a * d * c, f2=d * a * c, a=b}, {f1=c * a * d, f2=a * c * d, a=b}, {f1=c * a * d, f2=a * d * c, a=b}, {f1=c * a * d, f2=c * a * d, a=b}, {f1=c * a * d, f2=c * d * a, a=b}, {f1=c * d * a, f2=a * c * d, a=b}, {f1=c * d * a, f2=a * d * c, a=b}, {f1=c * d * a, f2=c * a * d, a=b}, {f1=d * a * c, f2=a * c * d, a=b}, {f1=d * a * c, f2=a * d * c, a=b}, {f1=d * c * a, f2=a * c * d, a=b}, {f1=a * b * d, f2=a * b * d, a=c}, {f1=a * b * d, f2=a * d * b, a=c}, {f1=a * b * d, f2=b * a * d, a=c}, {f1=a * b * d, f2=b * d * a, a=c}, {f1=a * b * d, f2=d * a * b, a=c}, {f1=a * b * d, f2=d * b * a, a=c}, {f1=a * d * b, f2=a * b * d, a=c}, {f1=a * d * b, f2=a * d * b, a=c}, {f1=a * d * b, f2=b * a * d, a=c}, {f1=a * d * b, f2=b * d * a, a=c}, {f1=a * d * b, f2=d * a * b, a=c}, {f1=b * a * d, f2=a * b * d, a=c}, {f1=b * a * d, f2=a * d * b, a=c}, {f1=b * a * d, f2=b * a * d, a=c}, {f1=b * a * d, f2=b * d * a, a=c}, {f1=b * d * a, f2=a * b * d, a=c}, {f1=b * d * a, f2=a * d * b, a=c}, {f1=b * d * a, f2=b * a * d, a=c}, {f1=d * a * b, f2=a * b * d, a=c}, {f1=d * a * b, f2=a * d * b, a=c}, {f1=d * b * a, f2=a * b * d, a=c}, {f1=a * b * c, f2=a * b * c, a=d}, {f1=a * b * c, f2=a * c * b, a=d}, {f1=a * b * c, f2=b * a * c, a=d}, {f1=a * b * c, f2=b * c * a, a=d}, {f1=a * b * c, f2=c * a * b, a=d}, {f1=a * b * c, f2=c * b * a, a=d}, {f1=a * c * b, f2=a * b * c, a=d}, {f1=a * c * b, f2=a * c * b, a=d}, {f1=a * c * b, f2=b * a * c, a=d}, {f1=a * c * b, f2=b * c * a, a=d}, {f1=a * c * b, f2=c * a * b, a=d}, {f1=b * a * c, f2=a * b * c, a=d}, {f1=b * a * c, f2=a * c * b, a=d}, {f1=b * a * c, f2=b * a * c, a=d}, {f1=b * a * c, f2=b * c * a, a=d}, {f1=b * c * a, f2=a * b * c, a=d}, {f1=b * c * a, f2=a * c * b, a=d}, {f1=b * c * a, f2=b * a * c, a=d}, {f1=c * a * b, f2=a * b * c, a=d}, {f1=c * a * b, f2=a * c * b, a=d}, {f1=c * b * a, f2=a * b * c, a=d}, {f1=b * c * d, f2=b * c * d, a=a}, {f1=b * c * d, f2=b * d * c, a=a}, {f1=b * c * d, f2=c * b * d, a=a}, {f1=b * c * d, f2=c * d * b, a=a}, {f1=b * c * d, f2=d * b * c, a=a}, {f1=b * c * d, f2=d * c * b, a=a}, {f1=b * d * c, f2=b * c * d, a=a}, {f1=b * d * c, f2=b * d * c, a=a}, {f1=b * d * c, f2=c * b * d, a=a}, {f1=b * d * c, f2=c * d * b, a=a}, {f1=b * d * c, f2=d * b * c, a=a}, {f1=c * b * d, f2=b * c * d, a=a}, {f1=c * b * d, f2=b * d * c, a=a}, {f1=c * b * d, f2=c * b * d, a=a}, {f1=c * b * d, f2=c * d * b, a=a}, {f1=c * d * b, f2=b * c * d, a=a}, {f1=c * d * b, f2=b * d * c, a=a}, {f1=c * d * b, f2=c * b * d, a=a}, {f1=d * b * c, f2=b * c * d, a=a}, {f1=d * b * c, f2=b * d * c, a=a}, {f1=d * c * b, f2=b * c * d, a=a}, {f1=a * c * d, f2=a * c * d, a=b}, {f1=a * c * d, f2=a * d * c, a=b}, {f1=a * c * d, f2=c * a * d, a=b}, {f1=a * c * d, f2=c * d * a, a=b}, {f1=a * c * d, f2=d * a * c, a=b}, {f1=a * c * d, f2=d * c * a, a=b}, {f1=a * d * c, f2=a * c * d, a=b}, {f1=a * d * c, f2=a * d * c, a=b}, {f1=a * d * c, f2=c * a * d, a=b}, {f1=a * d * c, f2=c * d * a, a=b}, {f1=a * d * c, f2=d * a * c, a=b}, {f1=c * a * d, f2=a * c * d, a=b}, {f1=c * a * d, f2=a * d * c, a=b}, {f1=c * a * d, f2=c * a * d, a=b}, {f1=c * a * d, f2=c * d * a, a=b}, {f1=c * d * a, f2=a * c * d, a=b}, {f1=c * d * a, f2=a * d * c, a=b}, {f1=c * d * a, f2=c * a * d, a=b}, {f1=d * a * c, f2=a * c * d, a=b}, {f1=d * a * c, f2=a * d * c, a=b}, {f1=d * c * a, f2=a * c * d, a=b}, {f1=a * b * d, f2=a * b * d, a=c}, {f1=a * b * d, f2=a * d * b, a=c}, {f1=a * b * d, f2=b * a * d, a=c}, {f1=a * b * d, f2=b * d * a, a=c}, {f1=a * b * d, f2=d * a * b, a=c}, {f1=a * b * d, f2=d * b * a, a=c}, {f1=a * d * b, f2=a * b * d, a=c}, {f1=a * d * b, f2=a * d * b, a=c}, {f1=a * d * b, f2=b * a * d, a=c}, {f1=a * d * b, f2=b * d * a, a=c}, {f1=a * d * b, f2=d * a * b, a=c}, {f1=b * a * d, f2=a * b * d, a=c}, {f1=b * a * d, f2=a * d * b, a=c}, {f1=b * a * d, f2=b * a * d, a=c}, {f1=b * a * d, f2=b * d * a, a=c}, {f1=b * d * a, f2=a * b * d, a=c}, {f1=b * d * a, f2=a * d * b, a=c}, {f1=b * d * a, f2=b * a * d, a=c}, {f1=d * a * b, f2=a * b * d, a=c}, {f1=d * a * b, f2=a * d * b, a=c}, {f1=d * b * a, f2=a * b * d, a=c}, {f1=a * b * c, f2=a * b * c, a=d}, {f1=a * b * c, f2=a * c * b, a=d}, {f1=a * b * c, f2=b * a * c, a=d}, {f1=a * b * c, f2=b * c * a, a=d}, {f1=a * b * c, f2=c * a * b, a=d}, {f1=a * b * c, f2=c * b * a, a=d}, {f1=a * c * b, f2=a * b * c, a=d}, {f1=a * c * b, f2=a * c * b, a=d}, {f1=a * c * b, f2=b * a * c, a=d}, {f1=a * c * b, f2=b * c * a, a=d}, {f1=a * c * b, f2=c * a * b, a=d}, {f1=b * a * c, f2=a * b * c, a=d}, {f1=b * a * c, f2=a * c * b, a=d}, {f1=b * a * c, f2=b * a * c, a=d}, {f1=b * a * c, f2=b * c * a, a=d}, {f1=b * c * a, f2=a * b * c, a=d}, {f1=b * c * a, f2=a * c * b, a=d}, {f1=b * c * a, f2=b * a * c, a=d}, {f1=c * a * b, f2=a * b * c, a=d}, {f1=c * a * b, f2=a * c * b, a=d}, {f1=c * b * a, f2=a * b * c, a=d}]
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
