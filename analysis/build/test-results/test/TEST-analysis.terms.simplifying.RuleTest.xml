<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="analysis.terms.simplifying.RuleTest" tests="22" skipped="0" failures="0" errors="0" timestamp="2022-05-02T14:36:05" hostname="Hans" time="0.255">
  <properties/>
  <testcase name="getNumericalRules()" classname="analysis.terms.simplifying.RuleTest" time="0.013"/>
  <testcase name="testApplyRule2_1()" classname="analysis.terms.simplifying.RuleTest" time="0.008"/>
  <testcase name="testApplyRule2_2()" classname="analysis.terms.simplifying.RuleTest" time="0.009"/>
  <testcase name="testApplyRule2_3()" classname="analysis.terms.simplifying.RuleTest" time="0.006"/>
  <testcase name="testApplyRule2_4()" classname="analysis.terms.simplifying.RuleTest" time="0.007"/>
  <testcase name="testApplyRule2_5()" classname="analysis.terms.simplifying.RuleTest" time="0.01"/>
  <testcase name="getProductRules()" classname="analysis.terms.simplifying.RuleTest" time="0.017"/>
  <testcase name="testLogRules()" classname="analysis.terms.simplifying.RuleTest" time="0.006"/>
  <testcase name="testProductRules2()" classname="analysis.terms.simplifying.RuleTest" time="0.006"/>
  <testcase name="getFlattenRules()" classname="analysis.terms.simplifying.RuleTest" time="0.007"/>
  <testcase name="testSumRules5_1()" classname="analysis.terms.simplifying.RuleTest" time="0.027"/>
  <testcase name="testSumRules5_2()" classname="analysis.terms.simplifying.RuleTest" time="0.003"/>
  <testcase name="getSimplificationRules()" classname="analysis.terms.simplifying.RuleTest" time="0.012"/>
  <testcase name="testApplyRule1()" classname="analysis.terms.simplifying.RuleTest" time="0.003"/>
  <testcase name="testApplyRule2()" classname="analysis.terms.simplifying.RuleTest" time="0.003"/>
  <testcase name="testApplyRule3()" classname="analysis.terms.simplifying.RuleTest" time="0.003"/>
  <testcase name="getLogRules()" classname="analysis.terms.simplifying.RuleTest" time="0.002"/>
  <testcase name="getPowerRules()" classname="analysis.terms.simplifying.RuleTest" time="0.003"/>
  <testcase name="getSumRules()" classname="analysis.terms.simplifying.RuleTest" time="0.009"/>
  <testcase name="testSumRules4()" classname="analysis.terms.simplifying.RuleTest" time="0.049"/>
  <testcase name="testSumRules5()" classname="analysis.terms.simplifying.RuleTest" time="0.01"/>
  <testcase name="testPowRules()" classname="analysis.terms.simplifying.RuleTest" time="0.007"/>
  <system-out><![CDATA[n1 + n2 -> n1 + n2
n1 + n2 + f1 -> n1 + n2 + f1
n1 * n2 -> n1 * n2
n1 * n2 * f1 -> n1 * n2 * f1
n1^n2 -> n1^n2
n1^(n2 * f1) -> n1^(n2 * f1)
(n1 * f1)^n2 -> (n1 * f1)^n2
Log_(n1)(n2) -> Log_(n1)(n2)
n1 * n2^-1 -> n1 * n2^-1
Log_(c)(a) + Log_(c)(b) -> Log_(c)(a * b) is applicable to Log2(x) + Log2(x * 2): [{c=2, b=x * 2, a=x}, {c=2, b=x, a=x * 2}]
replace: Log2(x) + Log2(x * 2)         (-5.2) 
by:      Log2(x * (x * 2))         (-4.4)
Product1 * f2 -> Product1 * f2 is applicable to x * (x * 2): [{f2=x, Product1=x * 2}]
replace: x * (x * 2)         (-3.6) 
by:      x * 2 * x         (-3.2)
a * a * f1 -> a^2 * f1 is applicable to x * 2 * x: [{f1=2, a=x}, {f1=2, a=x}]
replace: x * 2 * x         (-3.2) 
by:      x^2 * 2         (-2.6)
Log_(a)(b^c) -> c * Log_(a)(b) is applicable to Log2(x^2): [{c=2, b=x, a=2}]
replace: Log2(x^2)         (-2.6) 
by:      2 * Log2(x)         (-2.6)
a + a -> 2 * a is applicable to Log2(x) + Log2(x): [{a=Log2(x)}, {a=Log2(x)}]
replace: Log2(x) + Log2(x)         (-4.4) 
by:      2 * Log2(x)         (-2.6)
f1 * 1 -> f1
f1 * 0 -> 0
f1 * f1^-1 -> 1
a * a^-1 * f1 -> f1
f1 * (a + f2) -> f1 * a + f1 * f2
a * a -> a^2
a * a * f1 -> a^2 * f1
f1 * f1^b -> f1^(b + 1)
a * a^b * f1 -> a^(b + 1) * f1
a^b * a^c -> a^(b + c)
a^b * a^c * f1 -> a^(b + c) * f1
a^b * c^b -> (a * c)^b
a^b * c^b * f1 -> (a * c)^b * f1
Log_(a)(a) -> 1 is applicable to Ln(E): [{a=E}]
replace: Ln(E)         (-0.8) 
by:      1         (0.0)
f1 * f1^b -> f1^(b + 1) is applicable to 12 * 12^-1: [{f1=12, b=-1}]
replace: 12 * 12^-1         (-1.6) 
by:      12^(-1 + 1)         (-1.6)
a -> a
Sum1 + f2 -> Sum1 + f2
a -> a
Product1 * f2 -> x * 2 * f2
a * b + a + f1 -> a * (b + 1) + f1 is applicable to x + y + x * -4: [{f1=y, b=-4, a=x}]
replace: x + y + x * -4         (-5.0) 
by:      x * (-4 + 1) + y         (-4.4)
n1 + n2 -> n1 + n2 is applicable to -4 + 1: [{n1=-4, n2=1}, {n1=1, n2=-4}]
replace: -4 + 1         (-0.8) 
by:      -3         (0.0)
Log_(a)(1) -> 0
Log_(a)(a) -> 1
Log_(a)(a^b) -> b
Log_(a)(b^c) -> c * Log_(a)(b)
Log_(c)(a * b) -> Log_(c)(a) + Log_(c)(b)
f1 + 0 -> f1
a + -1 * a -> 0
a + -1 * a + f2 -> f2
a + a -> 2 * a
a + a + f1 -> 2 * a + f1
a * f1 + a * f2 -> a * (f1 + f2)
a * f1 + a * f2 + f3 -> a * (f1 + f2) + f3
a * f1 + a -> a * (f1 + 1)
a * f1 + a + f2 -> a * (f1 + 1) + f2
a * f1 + a^b * f2 -> a * (f1 + f2 * a^(b + -1))
a * f1 + a^b * f2 + f3 -> a * (f1 + f2 * a^(b + -1)) + f3
Log_(c)(a) + Log_(c)(b) -> Log_(c)(a * b)
Log_(c)(a) + Log_(c)(b) + f1 -> Log_(c)(a * b) + f1
Log_(c)(a) + -1 * Log_(c)(b) -> Log_(c)(a * b^-1)
Log_(c)(a) + -1 * Log_(c)(b) + f1 -> Log_(c)(a * b^-1) + f1
f1 * 1 -> f1
f1 * 0 -> 0
f1 * f1^-1 -> 1
a * a^-1 * f1 -> f1
f1 * (a + f2) -> f1 * a + f1 * f2
a * a -> a^2
a * a * f1 -> a^2 * f1
f1 * f1^b -> f1^(b + 1)
a * a^b * f1 -> a^(b + 1) * f1
a^b * a^c -> a^(b + c)
a^b * a^c * f1 -> a^(b + c) * f1
a^b * c^b -> (a * c)^b
a^b * c^b * f1 -> (a * c)^b * f1
a^1 -> a
a^0 -> 1
(a^b)^c -> a^(b * c)
a^a^b -> a^(b + 1)
a^b * a^c -> a^(b + c)
a^b * c^b -> (a + c)^b
a^(Log_(a)(b) * c) -> b^c
a^Log_(a)(b) -> b
a^Log_(a)(b) -> b
a^(b + f1) -> a^b * a^f1
a + -1 * a + f1 -> f1 is applicable to x + -1 * x + y: [{f1=y, a=x}]
replace: x + -1 * x + y         (-5.0) 
by:      y         (0.0)
Log_(a)(b) + Log_(a)(c) -> Log_(a)(b * c) is applicable to Log2(x) + Log2(x): [{c=x, b=x, a=2}, {c=x, b=x, a=2}]
replace: Log2(x) + Log2(x)         (-4.4) 
by:      Log2(x * x)         (-3.5999999999999996)
a + -1 * a + f1 -> f1 is not applicable to x + -1 * x
Log_(a)(1) -> 0
Log_(a)(a) -> 1
Log_(a)(a^b) -> b
Log_(a)(b^c) -> c * Log_(a)(b)
Log_(c)(a * b) -> Log_(c)(a) + Log_(c)(b)
a^1 -> a
a^0 -> 1
(a^b)^c -> a^(b * c)
a^a^b -> a^(b + 1)
a^b * a^c -> a^(b + c)
a^b * c^b -> (a + c)^b
a^(Log_(a)(b) * c) -> b^c
a^Log_(a)(b) -> b
a^Log_(a)(b) -> b
a^(b + f1) -> a^b * a^f1
f1 + 0 -> f1
a + -1 * a -> 0
a + -1 * a + f2 -> f2
a + a -> 2 * a
a + a + f1 -> 2 * a + f1
a * f1 + a * f2 -> a * (f1 + f2)
a * f1 + a * f2 + f3 -> a * (f1 + f2) + f3
a * f1 + a -> a * (f1 + 1)
a * f1 + a + f2 -> a * (f1 + 1) + f2
a * f1 + a^b * f2 -> a * (f1 + f2 * a^(b + -1))
a * f1 + a^b * f2 + f3 -> a * (f1 + f2 * a^(b + -1)) + f3
Log_(c)(a) + Log_(c)(b) -> Log_(c)(a * b)
Log_(c)(a) + Log_(c)(b) + f1 -> Log_(c)(a * b) + f1
Log_(c)(a) + -1 * Log_(c)(b) -> Log_(c)(a * b^-1)
Log_(c)(a) + -1 * Log_(c)(b) + f1 -> Log_(c)(a * b^-1) + f1
Log_(a)(1) -> 0
Log_(a)(a) -> 1
Log_(a)(a^b) -> b
Log_(a)(b^c) -> c * Log_(a)(b)
Log_(c)(a * b) -> Log_(c)(a) + Log_(c)(b)
f1 + 0 -> f1
a + -1 * a -> 0
a + -1 * a + f2 -> f2
a + a -> 2 * a
a + a + f1 -> 2 * a + f1
a * f1 + a * f2 -> a * (f1 + f2)
a * f1 + a * f2 + f3 -> a * (f1 + f2) + f3
a * f1 + a -> a * (f1 + 1)
a * f1 + a + f2 -> a * (f1 + 1) + f2
a * f1 + a^b * f2 -> a * (f1 + f2 * a^(b + -1))
a * f1 + a^b * f2 + f3 -> a * (f1 + f2 * a^(b + -1)) + f3
Log_(c)(a) + Log_(c)(b) -> Log_(c)(a * b)
Log_(c)(a) + Log_(c)(b) + f1 -> Log_(c)(a * b) + f1
Log_(c)(a) + -1 * Log_(c)(b) -> Log_(c)(a * b^-1)
Log_(c)(a) + -1 * Log_(c)(b) + f1 -> Log_(c)(a * b^-1) + f1
f1 * 1 -> f1
f1 * 0 -> 0
f1 * f1^-1 -> 1
a * a^-1 * f1 -> f1
f1 * (a + f2) -> f1 * a + f1 * f2
a * a -> a^2
a * a * f1 -> a^2 * f1
f1 * f1^b -> f1^(b + 1)
a * a^b * f1 -> a^(b + 1) * f1
a^b * a^c -> a^(b + c)
a^b * a^c * f1 -> a^(b + c) * f1
a^b * c^b -> (a * c)^b
a^b * c^b * f1 -> (a * c)^b * f1
a^1 -> a
a^0 -> 1
(a^b)^c -> a^(b * c)
a^a^b -> a^(b + 1)
a^b * a^c -> a^(b + c)
a^b * c^b -> (a + c)^b
a^(Log_(a)(b) * c) -> b^c
a^Log_(a)(b) -> b
a^Log_(a)(b) -> b
a^(b + f1) -> a^b * a^f1
a -> a
Sum1 + f2 -> Sum1 + f2
a -> a
Product1 * f2 -> Product1 * f2
n1 + n2 -> n1 + n2
n1 + n2 + f1 -> n1 + n2 + f1
n1 * n2 -> n1 * n2
n1 * n2 * f1 -> n1 * n2 * f1
n1^n2 -> n1^n2
n1^(n2 * f1) -> n1^(n2 * f1)
(n1 * f1)^n2 -> (n1 * f1)^n2
Log_(n1)(n2) -> Log_(n1)(n2)
n1 * n2^-1 -> n1 * n2^-1
some term (Log_(a)(1) -> 0)
some term (Log_(a)(a) -> 1)
some term (Log_(a)(a^b) -> b)
some term (Log_(a)(b^c) -> c * Log_(a)(b))
some term (Log_(c)(a * b) -> Log_(c)(a) + Log_(c)(b))
some term (f1 + 0 -> f1)
some term (a + -1 * a -> 0)
some term (a + -1 * a + f2 -> f2)
some term (a + a -> 2 * a)
some term (a + a + f1 -> 2 * a + f1)
some term (a * f1 + a * f2 -> a * (f1 + f2))
some term (a * f1 + a * f2 + f3 -> a * (f1 + f2) + f3)
some term (a * f1 + a -> a * (f1 + 1))
some term (a * f1 + a + f2 -> a * (f1 + 1) + f2)
some term (a * f1 + a^b * f2 -> a * (f1 + f2 * a^(b + -1)))
some term (a * f1 + a^b * f2 + f3 -> a * (f1 + f2 * a^(b + -1)) + f3)
some term (Log_(c)(a) + Log_(c)(b) -> Log_(c)(a * b))
some term (Log_(c)(a) + Log_(c)(b) + f1 -> Log_(c)(a * b) + f1)
some term (Log_(c)(a) + -1 * Log_(c)(b) -> Log_(c)(a * b^-1))
some term (Log_(c)(a) + -1 * Log_(c)(b) + f1 -> Log_(c)(a * b^-1) + f1)
some term (f1 * 1 -> f1)
some term (f1 * 0 -> 0)
some term (f1 * f1^-1 -> 1)
some term (a * a^-1 * f1 -> f1)
some term (f1 * (a + f2) -> f1 * a + f1 * f2)
some term (a * a -> a^2)
some term (a * a * f1 -> a^2 * f1)
some term (f1 * f1^b -> f1^(b + 1))
some term (a * a^b * f1 -> a^(b + 1) * f1)
some term (a^b * a^c -> a^(b + c))
some term (a^b * a^c * f1 -> a^(b + c) * f1)
some term (a^b * c^b -> (a * c)^b)
some term (a^b * c^b * f1 -> (a * c)^b * f1)
some term (a^1 -> a)
some term (a^0 -> 1)
some term ((a^b)^c -> a^(b * c))
some term (a^a^b -> a^(b + 1))
some term (a^b * a^c -> a^(b + c))
some term (a^b * c^b -> (a + c)^b)
some term (a^(Log_(a)(b) * c) -> b^c)
some term (a^Log_(a)(b) -> b)
some term (a^Log_(a)(b) -> b)
some term (a^(b + f1) -> a^b * a^f1)
some term (a -> a)
some term (Sum1 + f2 -> Sum1 + f2)
some term (a -> a)
some term (Product1 * f2 -> Product1 * f2)
some term (n1 + n2 -> n1 + n2)
some term (n1 + n2 + f1 -> n1 + n2 + f1)
some term (n1 * n2 -> n1 * n2)
some term (n1 * n2 * f1 -> n1 * n2 * f1)
some term (n1^n2 -> n1^n2)
some term (n1^(n2 * f1) -> n1^(n2 * f1))
some term ((n1 * f1)^n2 -> (n1 * f1)^n2)
some term (Log_(n1)(n2) -> Log_(n1)(n2))
some term (n1 * n2^-1 -> n1 * n2^-1)
n1 + n2 + f1 -> n1 + n2 + f1 is applicable to 1 + y + 2: [{f1=y, n1=1, n2=2}, {f1=y, n1=2, n2=1}]
replace: 1 + y + 2         (-2.2) 
by:      3 + y         (-1.8)
a * f1 + a * f2 -> a * (f1 + f2) is applicable to Ln(2) * 2^x * x^2 + 2^x * 2 * x: [{f1=Ln(2) * x^2, f2=2 * x, a=2^x}, {f1=Ln(2) * x^2, f2=x * 2, a=2^x}, {f1=x^2 * Ln(2), f2=2 * x, a=2^x}, {f1=2 * x, f2=Ln(2) * x^2, a=2^x}, {f1=2 * x, f2=x^2 * Ln(2), a=2^x}, {f1=x * 2, f2=Ln(2) * x^2, a=2^x}]
replace: Ln(2) * 2^x * x^2 + 2^x * 2 * x         (-10.400000000000002) 
by:      2^x * (Ln(2) * x^2 + 2 * x)         (-8.6)
a^(b + f1) -> a^b * a^f1 is applicable to 2^(x + 1): [{f1=1, b=x, a=2}, {f1=x, b=1, a=2}]
replace: 2^(x + 1)         (-2.6) 
by:      2^x * 2^1         (-3.4000000000000004)
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
